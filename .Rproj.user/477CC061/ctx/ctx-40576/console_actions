{
    "type": [
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        2,
        3,
        2,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        2
    ],
    "data": [
        "\nR version 4.1.0 (2021-05-18) -- \"Camp Pontanezen\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin17.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "369/43100",
        "[1] 0.008561485\n",
        "> ",
        "107/18900",
        "[1] 0.005661376\n",
        "> ",
        "4541/1177342",
        "[1] 0.003856993\n",
        "> ",
        "10000/500",
        "[1] 20\n",
        "> ",
        "500/1177342",
        "[1] 0.0004246854\n",
        "> ",
        "13/92",
        "[1] 0.1413043\n",
        "> ",
        "# Copyright (c) Facebook, Inc. and its affiliates.",
        "> ",
        "",
        "> ",
        "# This source code is licensed under the MIT license found in the",
        "> ",
        "# LICENSE file in the root directory of this source tree.",
        "> ",
        "",
        "> ",
        "#############################################################################################",
        "> ",
        "####################         Facebook MMM Open Source - Robyn 3.0.0    ######################",
        "> ",
        "####################                    2021-07-30                     ######################",
        "> ",
        "#############################################################################################",
        "> ",
        "",
        "> ",
        "## R version 4.1.0",
        "> ",
        "rm(list=ls()); gc()",
        "          used (Mb) gc trigger (Mb) limit (Mb) max used (Mb)\nNcells  688413 36.8    1232512 65.9         NA  1232512 65.9\nVcells 1846084 14.1    8388608 64.0      16384  3141914 24.0\n",
        "> ",
        "",
        "> ",
        "################################################################",
        "> ",
        "#### Step 0: setup environement",
        "> ",
        "",
        "> ",
        "## set locale for non English R",
        "> ",
        "# Sys.setlocale(\"LC_TIME\", \"English\") # Sys.setlocale(\"LC_ALL\", 'en_US.UTF-8')",
        "> ",
        "",
        "> ",
        "## load scripts",
        "> ",
        "script_path = substr(rstudioapi::getActiveDocumentContext()$path, start = 1, stop = max(gregexpr(\"/\", rstudioapi::getActiveDocumentContext()$path)[[1]]))",
        "> ",
        "source(paste(script_path, \"fb_robyn.func.R\", sep=\"\"))",
        "> ",
        "source(paste(script_path, \"fb_robyn.optm.R\", sep=\"\"))",
        "> ",
        "conda_install(\"r-reticulate\", \"nevergrad\", pip=TRUE)",
        "Error in conda_install(\"r-reticulate\", \"nevergrad\", pip = TRUE) : \n  could not find function \"conda_install\"\n",
        "> ",
        "## load libraries",
        "> ",
        "load_libs()",
        "Loading required libraries: data.table, stringr, lubridate, foreach, glmnet, car, StanHeaders, prophet, rstan, ggplot2, gridExtra, grid, ggpubr, see, PerformanceAnalytics, nloptr, minpack.lm, rPref, reticulate, rstudioapi, corrplot, doFuture, doRNG\n",
        "Loading required package: data.table\n",
        "data.table 1.14.0 using 1 threads (see ?getDTthreads).  Latest news: r-datatable.com\n",
        "**********\nThis installation of data.table has not detected OpenMP support. It should still work but in single-threaded mode.\nThis is a Mac. Please read https://mac.r-project.org/openmp/. Please engage with Apple and ask them for support. Check r-datatable.com for updates, and our Mac instructions here: https://github.com/Rdatatable/data.table/wiki/Installation. After several years of many reports of installation problems on Mac, it's time to gingerly point out that there have been no similar problems on Windows or Linux.\n**********\n",
        "Loading required package: stringr\n",
        "Loading required package: lubridate\n",
        "\nAttaching package: ‘lubridate’\n\n",
        "The following objects are masked from ‘package:data.table’:\n\n    hour, isoweek, mday, minute, month, quarter, second, wday, week, yday, year\n\n",
        "The following objects are masked from ‘package:base’:\n\n    date, intersect, setdiff, union\n\n",
        "Loading required package: foreach\n",
        "Loading required package: glmnet\n",
        "Loading required package: Matrix\n",
        "Loaded glmnet 4.1-2\n",
        "Loading required package: car\n",
        "Loading required package: carData\n",
        "Loading required package: StanHeaders\n",
        "Loading required package: prophet\n",
        "Loading required package: Rcpp\n",
        "Loading required package: rlang\n",
        "\nAttaching package: ‘rlang’\n\n",
        "The following object is masked from ‘package:data.table’:\n\n    :=\n\n",
        "Loading required package: rstan\n",
        "Loading required package: ggplot2\n",
        "Learn more about the underlying theory at https://ggplot2-book.org/\n",
        "rstan (Version 2.21.2, GitRev: 2e1f913d3ca3)\n",
        "For execution on a local, multicore CPU with excess RAM we recommend calling\noptions(mc.cores = parallel::detectCores()).\nTo avoid recompilation of unchanged Stan programs, we recommend calling\nrstan_options(auto_write = TRUE)\n",
        "Loading required package: gridExtra\n",
        "Loading required package: grid\n",
        "Loading required package: ggpubr\n",
        "Loading required package: see\n",
        "Registered S3 methods overwritten by 'parameters':\n  method                           from      \n  as.double.parameters_kurtosis    datawizard\n  as.double.parameters_skewness    datawizard\n  as.double.parameters_smoothness  datawizard\n  as.numeric.parameters_kurtosis   datawizard\n  as.numeric.parameters_skewness   datawizard\n  as.numeric.parameters_smoothness datawizard\n  print.parameters_distribution    datawizard\n  print.parameters_kurtosis        datawizard\n  print.parameters_skewness        datawizard\n  summary.parameters_kurtosis      datawizard\n  summary.parameters_skewness      datawizard\n",
        "Loading required package: PerformanceAnalytics\n",
        "Loading required package: xts\n",
        "Loading required package: zoo\n",
        "\nAttaching package: ‘zoo’\n\n",
        "The following objects are masked from ‘package:base’:\n\n    as.Date, as.Date.numeric\n\n",
        "\nAttaching package: ‘xts’\n\n",
        "The following objects are masked from ‘package:data.table’:\n\n    first, last\n\n",
        "\nAttaching package: ‘PerformanceAnalytics’\n\n",
        "The following object is masked from ‘package:graphics’:\n\n    legend\n\n",
        "Loading required package: nloptr\n",
        "Loading required package: minpack.lm\n",
        "Loading required package: rPref\n",
        "\nAttaching package: ‘rPref’\n\n",
        "The following object is masked from ‘package:data.table’:\n\n    between\n\n",
        "Loading required package: reticulate\n",
        "Loading required package: rstudioapi\n",
        "Loading required package: corrplot\n",
        "corrplot 0.90 loaded\n",
        "Loading required package: doFuture\n",
        "Loading required package: future\n",
        "Loading required package: doRNG\n",
        "Loading required package: rngtools\n",
        "> ",
        "conda_install(\"r-reticulate\", \"nevergrad\", pip=TRUE)",
        "Requirement already satisfied: nevergrad in /Users/gufengzhou/Library/r-miniconda/envs/r-reticulate/lib/python3.9/site-packages (0.4.3.post4)\nRequirement already satisfied: typing-extensions>=3.6.6 in /Users/gufengzhou/Library/r-miniconda/envs/r-reticulate/lib/python3.9/site-packages (from nevergrad) (3.10.0.0)\nRequirement already satisfied: bayesian-optimization>=1.2.0 in /Users/gufengzhou/Library/r-miniconda/envs/r-reticulate/lib/python3.9/site-packages (from nevergrad) (1.2.0)\nRequirement already satisfied: cma>=2.6.0 in /Users/gufengzhou/Library/r-miniconda/envs/r-reticulate/lib/python3.9/site-packages (from nevergrad) (3.1.0)\n",
        "Requirement already satisfied: numpy>=1.15.0 in /Users/gufengzhou/Library/r-miniconda/envs/r-reticulate/lib/python3.9/site-packages (from nevergrad) (1.21.1)\nRequirement already satisfied: scipy>=0.14.0 in /Users/gufengzhou/Library/r-miniconda/envs/r-reticulate/lib/python3.9/site-packages (from bayesian-optimization>=1.2.0->nevergrad) (1.7.0)\nRequirement already satisfied: scikit-learn>=0.18.0 in /Users/gufengzhou/Library/r-miniconda/envs/r-reticulate/lib/python3.9/site-packages (from bayesian-optimization>=1.2.0->nevergrad) (0.24.2)\n",
        "Requirement already satisfied: joblib>=0.11 in /Users/gufengzhou/Library/r-miniconda/envs/r-reticulate/lib/python3.9/site-packages (from scikit-learn>=0.18.0->bayesian-optimization>=1.2.0->nevergrad) (1.0.1)\nRequirement already satisfied: threadpoolctl>=2.0.0 in /Users/gufengzhou/Library/r-miniconda/envs/r-reticulate/lib/python3.9/site-packages (from scikit-learn>=0.18.0->bayesian-optimization>=1.2.0->nevergrad) (2.2.0)\n[1] \"nevergrad\"\n",
        "> ",
        "use_condaenv(\"r-reticulate\")",
        "> ",
        "## load input data & holiday.",
        "> ",
        "## Please note the simulated dataset includes new variables \"newsletter\" and \"events\" now to demonstrate usage of factor_vars and organic_vars",
        "> ",
        "dt_input <- fread(paste0(script_path, \"de_simulated_data.csv\"))",
        "> ",
        "dt_holidays <- fread(paste0(script_path, \"holidays.csv\"))",
        "> ",
        "## IMPORTANT: robyn_object must has extension .RData. The object name can be changed.",
        "> ",
        "robyn_object <- \"/Users/gufengzhou/Documents/robyn_dev_output/Robyn.RData\"",
        "> ",
        "registerDoSEQ(); availableCores()",
        "system \n     8 \n",
        "> ",
        "InputCollect <- robyn_inputs(dt_input = dt_input",
        "+ ",
        "                             ,dt_holidays = dt_holidays",
        "+ ",
        "",
        "+ ",
        "",
        "+ ",
        "                             #######################",
        "+ ",
        "                             #### set variables ####",
        "+ ",
        "",
        "+ ",
        "                             ,date_var = \"DATE\" # date format must be \"2020-01-01\"",
        "+ ",
        "                             ,dep_var = \"revenue\" # there should be only one dependent variable",
        "+ ",
        "                             ,dep_var_type = \"revenue\" # \"revenue\" or \"conversion\"",
        "+ ",
        "",
        "+ ",
        "                             ,prophet_vars = c(\"trend\", \"season\", \"holiday\") # \"trend\",\"season\", \"weekday\", \"holiday\" are provided and case-sensitive. Recommended to at least keep Trend & Holidays",
        "+ ",
        "                             ,prophet_signs = c(\"default\",\"default\", \"default\") # c(\"default\", \"positive\", and \"negative\"). Recommend as default. Must be same length as prophet_vars",
        "+ ",
        "                             ,prophet_country = \"DE\" # only one country allowed once. Including national holidays for 59 countries, whose list can be found on our githut guide",
        "+ ",
        "",
        "+ ",
        "                             ,context_vars = c(\"competitor_sales_B\", \"events\") # typically competitors, price & promotion, temperature,  unemployment rate etc",
        "+ ",
        "                             ,context_signs = c(\"default\", \"default\") # c(\"default\", \"positive\", and \"negative\"), control the signs of coefficients for baseline variables",
        "+ ",
        "",
        "+ ",
        "                             ,paid_media_vars = c(\"tv_S\",\"ooh_S\"\t,\t\"print_S\"\t,\"facebook_I\"\t,\"search_clicks_P\") # c(\"tv_S\"\t,\"ooh_S\",\t\"print_S\"\t,\"facebook_I\", \"facebook_S\"\t,\"search_clicks_P\"\t,\"search_S\") we recommend to use media exposure metrics like impressions, GRP etc for the model. If not applicable, use spend instead",
        "+ ",
        "                             ,paid_media_signs = c(\"positive\", \"positive\",\"positive\", \"positive\", \"positive\") # c(\"default\", \"positive\", and \"negative\"). must have same length as paid_media_vars. control the signs of coefficients for media variables",
        "+ ",
        "                             ,paid_media_spends = c(\"tv_S\",\"ooh_S\",\t\"print_S\"\t,\"facebook_S\"\t,\"search_S\") # spends must have same order and same length as paid_media_vars",
        "+ ",
        "",
        "+ ",
        "                             ,organic_vars = c(\"newsletter\")",
        "+ ",
        "                             ,organic_signs = c(\"positive\") # must have same length as organic_vars",
        "+ ",
        "",
        "+ ",
        "                             ,factor_vars = c(\"events\") # specify which variables in context_vars and organic_vars are factorial",
        "+ ",
        "",
        "+ ",
        "",
        "+ ",
        "                             ##############################",
        "+ ",
        "                             #### set model parameters ####",
        "+ ",
        "",
        "+ ",
        "                             ## set cores for parallel computing",
        "+ ",
        "                             ,cores = 6 # I am using 6 cores from 8 on my local machine. Use detectCores() to find out cores",
        "+ ",
        "",
        "+ ",
        "                             ## set rolling window start",
        "+ ",
        "                             ,window_start = \"2016-11-23\"",
        "+ ",
        "                             ,window_end = \"2018-08-22\"",
        "+ ",
        "",
        "+ ",
        "                             ## set model core features",
        "+ ",
        "                             ,adstock = \"geometric\" # geometric or weibull. weibull is more flexible, yet has one more parameter and thus takes longer",
        "+ ",
        "                             ,iterations = 2000  # number of allowed iterations per trial. 500 is recommended",
        "+ ",
        "",
        "+ ",
        "                             ,nevergrad_algo = \"TwoPointsDE\" # selected algorithm for Nevergrad, the gradient-free optimisation library https://facebookresearch.github.io/nevergrad/index.html",
        "+ ",
        "                             ,trials = 5 # number of allowed iterations per trial. 40 is recommended without calibration, 100 with calibration.",
        "+ ",
        "                             ## Time estimation: with geometric adstock, 500 iterations * 40 trials and 6 cores, it takes less than 1 hour. Weibull takes at least twice as much time.",
        "+ ",
        "",
        "+ ",
        "                             #,hyperparameters = hyperparameters",
        "+ ",
        "",
        "+ ",
        "                             # ,calibration_input = data.table(channel = c(\"facebook_I\",  \"tv_S\", \"facebook_I\"),",
        "+ ",
        "                             #                        liftStartDate = as.Date(c(\"2018-05-01\", \"2017-11-27\", \"2018-07-01\")),",
        "+ ",
        "                             #                        liftEndDate = as.Date(c(\"2018-06-10\", \"2017-12-03\", \"2018-07-20\")),",
        "+ ",
        "                             #                        liftAbs = c(400000, 300000, 200000))",
        "+ ",
        ")",
        "window_start is adapted to the closest date contained in input data: 2016-11-21\n",
        "window_end is adapted to the closest date contained in input data: 2018-08-20\n",
        "we recommend to run at least 500 iterations per trial and at least 40 trials at the beginning\n",
        "\nhyperparameters is not provided yet. run robyn_inputs(InputCollect = InputCollect, hyperparameter = ...) to add it\n\n",
        "> ",
        "# helper plots: set plot to TRUE for transformation examples",
        "> ",
        "plot_adstock(FALSE) # adstock transformation example plot, helping you understand geometric/theta and weibull/shape/scale transformation",
        "> ",
        "plot_saturation(FALSE) # s-curve transformation example plot, helping you understand hill/alpha/gamma transformatio",
        "> ",
        "hyper_names(adstock = InputCollect$adstock, all_media = InputCollect$all_media)",
        " [1] \"facebook_I_alphas\"      \"facebook_I_gammas\"      \"facebook_I_thetas\"      \"newsletter_alphas\"      \"newsletter_gammas\"     \n [6] \"newsletter_thetas\"      \"ooh_S_alphas\"           \"ooh_S_gammas\"           \"ooh_S_thetas\"           \"print_S_alphas\"        \n[11] \"print_S_gammas\"         \"print_S_thetas\"         \"search_clicks_P_alphas\" \"search_clicks_P_gammas\" \"search_clicks_P_thetas\"\n[16] \"tv_S_alphas\"            \"tv_S_gammas\"            \"tv_S_thetas\"           \n",
        "> ",
        "hyperparameters <- list(",
        "+ ",
        "  facebook_I_alphas = c(0.5, 3) # example bounds for alpha",
        "+ ",
        "  ,facebook_I_gammas = c(0.3, 1) # example bounds for gamma",
        "+ ",
        "  ,facebook_I_thetas = c(0, 0.3) # example bounds for theta",
        "+ ",
        "  #,facebook_I_shapes = c(0.0001, 2) # example bounds for shape",
        "+ ",
        "  #,facebook_I_scales = c(0, 0.1) # example bounds for scale",
        "+ ",
        "",
        "+ ",
        "  ,print_S_alphas = c(0.5, 3)",
        "+ ",
        "  ,print_S_gammas = c(0.3, 1)",
        "+ ",
        "  ,print_S_thetas = c(0.1, 0.4)",
        "+ ",
        "  #,print_S_shapes = c(0.0001, 2)",
        "+ ",
        "  #,print_S_scales = c(0, 0.1)",
        "+ ",
        "",
        "+ ",
        "  ,tv_S_alphas = c(0.5, 3)",
        "+ ",
        "  ,tv_S_gammas = c(0.3, 1)",
        "+ ",
        "  ,tv_S_thetas = c(0.3, 0.8)",
        "+ ",
        "  #,tv_S_shapes = c(0.0001, 2)",
        "+ ",
        "  #,tv_S_scales= c(0, 0.1)",
        "+ ",
        "",
        "+ ",
        "  ,search_clicks_P_alphas = c(0.5, 3)",
        "+ ",
        "  ,search_clicks_P_gammas = c(0.3, 1)",
        "+ ",
        "  ,search_clicks_P_thetas = c(0, 0.3)",
        "+ ",
        "  #,search_clicks_P_shapes = c(0.0001, 2)",
        "+ ",
        "  #,search_clicks_P_scales = c(0, 0.1)",
        "+ ",
        "",
        "+ ",
        "  ,ooh_S_alphas = c(0.5, 3)",
        "+ ",
        "  ,ooh_S_gammas = c(0.3, 1)",
        "+ ",
        "  ,ooh_S_thetas = c(0.1, 0.4)",
        "+ ",
        "  #,ooh_S_shapes = c(0.0001, 2)",
        "+ ",
        "  #,ooh_S_scales = c(0, 0.1)",
        "+ ",
        "",
        "+ ",
        "  ,newsletter_alphas = c(0.5, 3)",
        "+ ",
        "  ,newsletter_gammas = c(0.3, 1)",
        "+ ",
        "  ,newsletter_thetas = c(0.1, 0.4)",
        "+ ",
        "  #,newsletter_shapes = c(0.0001, 2)",
        "+ ",
        "  #,newsletter_scales = c(0, 0.1)",
        "+ ",
        ")",
        "> ",
        "InputCollect <- robyn_inputs(InputCollect = InputCollect",
        "+ ",
        "                             , hyperparameters = hyperparameters)",
        "\nAll input in robyn_inputs() correct. running robyn_engineering()\n",
        "> ",
        "OutputCollect <- robyn_run(InputCollect = InputCollect",
        "+ ",
        "                           , plot_folder = robyn_object",
        "+ ",
        "                           , pareto_fronts = 1",
        "+ ",
        "                           , plot_pareto = F)",
        "Input data has 208 weeks in total: 2015-11-23 to 2019-11-11\n",
        "Initial model is built on rolling window of 92 weeks: 2016-11-21 to 2018-08-20\n",
        "\nUsing geometric adstocking with 18 hyperparameters & 100-fold ridge x-validation on 6 cores...\n\nRunning trial nr. 1 out of 5 with 2000 iterations per trial ...\n",
        "/Users/gufengzhou/Library/r-miniconda/envs/r-reticulate/lib/python3.9/site-packages/cma/s.py:13: UserWarning: Could not import matplotlib.pyplot, therefore ``cma.plot()`` etc. is not available\n  _warnings.warn('Could not import matplotlib.pyplot, therefore'\n",
        "\n Nevergrad algorithm:  TwoPointsDE \n\r  |                                                                                                                                         \r  |                                                                                                                                   |   0%\r  |                                                                                                                                         \r  |=                                                                                                                                  |   1%",
        "\r  |                                                                                                                                         \r  |==                                                                                                                                 |   1%\r  |                                                                                                                                         \r  |==                                                                                                                                 |   2%",
        "",
        "Warning message:\n",
        "In supportsMulticoreAndRStudio(...) :",
        "\n ",
        " [ONE-TIME WARNING] Forked processing ('multicore') is not supported when running R from RStudio because it is considered unstable. For more details, how to control forked processing or not, and how to silence this warning in future R sessions, see ?parallelly::supportsMulticore\n",
        "Timing stopped at: 5.157 0.067 5.266\n",
        "\nRestarting R session...\n\n"
    ]
}